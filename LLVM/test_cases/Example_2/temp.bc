; ModuleID = '<stdin>'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct._opaque_pthread_t = type { i64, %struct.__darwin_pthread_handler_rec*, [8176 x i8] }
%struct.__darwin_pthread_handler_rec = type { void (i8*)*, i8*, %struct.__darwin_pthread_handler_rec* }
%struct._opaque_pthread_mutexattr_t = type { i64, [8 x i8] }
%struct._opaque_pthread_attr_t = type { i64, [56 x i8] }

@Global = global i32 0, align 4
@lock = global %struct._opaque_pthread_mutex_t zeroinitializer, align 8

; Function Attrs: ssp uwtable
define void @_Z11inc_counterv() #0 {
entry:
  call void @__arunk_init()
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  %call = call i32 @pthread_mutex_lock(%struct._opaque_pthread_mutex_t* @lock), !dbg !54
  call void @__arunk_lock(i8* bitcast (%struct._opaque_pthread_mutex_t* @lock to i8*)), !dbg !55
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !56, metadata !57), !dbg !55
  %0 = bitcast i32* %i to i8*, !dbg !58
  call void @__arunk_write4(i8* %0), !dbg !58
  store i32 0, i32* %i, align 4, !dbg !58
  br label %while.cond, !dbg !59

while.cond:                                       ; preds = %while.body, %entry
  %1 = bitcast i32* %i to i8*, !dbg !59
  call void @__arunk_read4(i8* %1), !dbg !59
  %2 = load i32* %i, align 4, !dbg !59
  %cmp = icmp slt i32 %2, 1, !dbg !59
  br i1 %cmp, label %while.body, label %while.end, !dbg !59

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata !{i32* %temp}, metadata !60, metadata !57), !dbg !62
  %3 = load i32* @Global, align 4, !dbg !63
  %add = add nsw i32 %3, 1, !dbg !63
  %4 = bitcast i32* %temp to i8*, !dbg !63
  call void @__arunk_write4(i8* %4), !dbg !63
  store i32 %add, i32* %temp, align 4, !dbg !63
  %5 = bitcast i32* %temp to i8*, !dbg !64
  call void @__arunk_read4(i8* %5), !dbg !64
  %6 = load i32* %temp, align 4, !dbg !64
  call void @__arunk_write4(i8* bitcast (i32* @Global to i8*)), !dbg !64
  store i32 %6, i32* @Global, align 4, !dbg !64
  %7 = load i32* %i, align 4, !dbg !65
  %inc = add nsw i32 %7, 1, !dbg !65
  %8 = bitcast i32* %i to i8*, !dbg !65
  call void @__arunk_write4(i8* %8), !dbg !65
  store i32 %inc, i32* %i, align 4, !dbg !65
  br label %while.cond, !dbg !59

while.end:                                        ; preds = %while.cond
  %call1 = call i32 @pthread_mutex_unlock(%struct._opaque_pthread_mutex_t* @lock), !dbg !66
  call void @__arunk_unlock(i8* bitcast (%struct._opaque_pthread_mutex_t* @lock to i8*)), !dbg !67
  ret void, !dbg !67
}

declare i32 @pthread_mutex_lock(%struct._opaque_pthread_mutex_t*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare i32 @pthread_mutex_unlock(%struct._opaque_pthread_mutex_t*) #1

; Function Attrs: nounwind ssp uwtable
define void @_Z24inc_counter_without_lockv() #3 {
entry:
  call void @__arunk_init()
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !68, metadata !57), !dbg !69
  %0 = bitcast i32* %i to i8*, !dbg !70
  call void @__arunk_write4(i8* %0), !dbg !70
  store i32 0, i32* %i, align 4, !dbg !70
  br label %while.cond, !dbg !71

while.cond:                                       ; preds = %while.body, %entry
  %1 = bitcast i32* %i to i8*, !dbg !71
  call void @__arunk_read4(i8* %1), !dbg !71
  %2 = load i32* %i, align 4, !dbg !71
  %cmp = icmp slt i32 %2, 1, !dbg !71
  br i1 %cmp, label %while.body, label %while.end, !dbg !71

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata !{i32* %temp}, metadata !72, metadata !57), !dbg !74
  %3 = load i32* @Global, align 4, !dbg !75
  %add = add nsw i32 %3, 1, !dbg !75
  %4 = bitcast i32* %temp to i8*, !dbg !75
  call void @__arunk_write4(i8* %4), !dbg !75
  store i32 %add, i32* %temp, align 4, !dbg !75
  %5 = bitcast i32* %temp to i8*, !dbg !76
  call void @__arunk_read4(i8* %5), !dbg !76
  %6 = load i32* %temp, align 4, !dbg !76
  call void @__arunk_write4(i8* bitcast (i32* @Global to i8*)), !dbg !76
  store i32 %6, i32* @Global, align 4, !dbg !76
  %7 = load i32* %i, align 4, !dbg !77
  %inc = add nsw i32 %7, 1, !dbg !77
  %8 = bitcast i32* %i to i8*, !dbg !77
  call void @__arunk_write4(i8* %8), !dbg !77
  store i32 %inc, i32* %i, align 4, !dbg !77
  br label %while.cond, !dbg !71

while.end:                                        ; preds = %while.cond
  ret void, !dbg !78
}

; Function Attrs: nounwind ssp uwtable
define i8* @_Z7Thread1Pv(i8* %x) #3 {
entry:
  call void @__arunk_init()
  %x.addr = alloca i8*, align 8
  %0 = bitcast i8** %x.addr to i8*
  call void @__arunk_write8(i8* %0)
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %x.addr}, metadata !79, metadata !57), !dbg !80
  call void @_Z24inc_counter_without_lockv(), !dbg !81
  ret i8* null, !dbg !82
}

; Function Attrs: ssp uwtable
define i32 @main() #0 {
entry:
  call void @__arunk_init()
  %t = alloca [1 x %struct._opaque_pthread_t*], align 8
  call void @llvm.dbg.declare(metadata !{[1 x %struct._opaque_pthread_t*]* %t}, metadata !83, metadata !57), !dbg !91
  %call = call i32 @pthread_mutex_init(%struct._opaque_pthread_mutex_t* @lock, %struct._opaque_pthread_mutexattr_t* null), !dbg !92
  call void @_Z24inc_counter_without_lockv(), !dbg !93
  %arrayidx = getelementptr inbounds [1 x %struct._opaque_pthread_t*]* %t, i32 0, i64 0, !dbg !94
  %call1 = call i32 @pthread_create(%struct._opaque_pthread_t** %arrayidx, %struct._opaque_pthread_attr_t* null, i8* (i8*)* @_Z7Thread1Pv, i8* null), !dbg !94
  %0 = bitcast %struct._opaque_pthread_t** %arrayidx to i8*, !dbg !95
  call void @__arunk_create(i8* %0), !dbg !95
  %arrayidx2 = getelementptr inbounds [1 x %struct._opaque_pthread_t*]* %t, i32 0, i64 0, !dbg !95
  %1 = bitcast %struct._opaque_pthread_t** %arrayidx2 to i8*, !dbg !95
  call void @__arunk_read8(i8* %1), !dbg !95
  %2 = load %struct._opaque_pthread_t** %arrayidx2, align 8, !dbg !95
  %call3 = call i32 @"\01_pthread_join"(%struct._opaque_pthread_t* %2, i8** null), !dbg !95
  %3 = bitcast %struct._opaque_pthread_t* %2 to i8*, !dbg !96
  call void @__arunk_join(i8* %3), !dbg !96
  %call4 = call i32 @pthread_mutex_destroy(%struct._opaque_pthread_mutex_t* @lock), !dbg !96
  ret i32 0, !dbg !97
}

declare i32 @pthread_mutex_init(%struct._opaque_pthread_mutex_t*, %struct._opaque_pthread_mutexattr_t*) #1

declare i32 @pthread_create(%struct._opaque_pthread_t**, %struct._opaque_pthread_attr_t*, i8* (i8*)*, i8*) #1

declare i32 @"\01_pthread_join"(%struct._opaque_pthread_t*, i8**) #1

declare i32 @pthread_mutex_destroy(%struct._opaque_pthread_mutex_t*) #1

declare void @__arunk_func_entry(i8*)

declare void @__arunk_func_exit()

declare void @__arunk_read1(i8*)

declare void @__arunk_write1(i8*)

declare i8 @__arunk_atomic8_load(i8*, i32)

declare void @__arunk_atomic8_store(i8*, i8, i32)

declare i8 @__arunk_atomic8_exchange(i8*, i8, i32)

declare i8 @__arunk_atomic8_fetch_add(i8*, i8, i32)

declare i8 @__arunk_atomic8_fetch_sub(i8*, i8, i32)

declare i8 @__arunk_atomic8_fetch_and(i8*, i8, i32)

declare i8 @__arunk_atomic8_fetch_nand(i8*, i8, i32)

declare i8 @__arunk_atomic8_fetch_or(i8*, i8, i32)

declare i8 @__arunk_atomic8_fetch_xor(i8*, i8, i32)

declare i8 @__arunk_atomic8_compare_exchange_val(i8*, i8, i8, i32, i32)

declare void @__arunk_read2(i8*)

declare void @__arunk_write2(i8*)

declare i16 @__arunk_atomic16_load(i16*, i32)

declare void @__arunk_atomic16_store(i16*, i16, i32)

declare i16 @__arunk_atomic16_exchange(i16*, i16, i32)

declare i16 @__arunk_atomic16_fetch_add(i16*, i16, i32)

declare i16 @__arunk_atomic16_fetch_sub(i16*, i16, i32)

declare i16 @__arunk_atomic16_fetch_and(i16*, i16, i32)

declare i16 @__arunk_atomic16_fetch_nand(i16*, i16, i32)

declare i16 @__arunk_atomic16_fetch_or(i16*, i16, i32)

declare i16 @__arunk_atomic16_fetch_xor(i16*, i16, i32)

declare i16 @__arunk_atomic16_compare_exchange_val(i16*, i16, i16, i32, i32)

declare void @__arunk_read4(i8*)

declare void @__arunk_write4(i8*)

declare i32 @__arunk_atomic32_load(i32*, i32)

declare void @__arunk_atomic32_store(i32*, i32, i32)

declare i32 @__arunk_atomic32_exchange(i32*, i32, i32)

declare i32 @__arunk_atomic32_fetch_add(i32*, i32, i32)

declare i32 @__arunk_atomic32_fetch_sub(i32*, i32, i32)

declare i32 @__arunk_atomic32_fetch_and(i32*, i32, i32)

declare i32 @__arunk_atomic32_fetch_nand(i32*, i32, i32)

declare i32 @__arunk_atomic32_fetch_or(i32*, i32, i32)

declare i32 @__arunk_atomic32_fetch_xor(i32*, i32, i32)

declare i32 @__arunk_atomic32_compare_exchange_val(i32*, i32, i32, i32, i32)

declare void @__arunk_read8(i8*)

declare void @__arunk_write8(i8*)

declare i64 @__arunk_atomic64_load(i64*, i32)

declare void @__arunk_atomic64_store(i64*, i64, i32)

declare i64 @__arunk_atomic64_exchange(i64*, i64, i32)

declare i64 @__arunk_atomic64_fetch_add(i64*, i64, i32)

declare i64 @__arunk_atomic64_fetch_sub(i64*, i64, i32)

declare i64 @__arunk_atomic64_fetch_and(i64*, i64, i32)

declare i64 @__arunk_atomic64_fetch_nand(i64*, i64, i32)

declare i64 @__arunk_atomic64_fetch_or(i64*, i64, i32)

declare i64 @__arunk_atomic64_fetch_xor(i64*, i64, i32)

declare i64 @__arunk_atomic64_compare_exchange_val(i64*, i64, i64, i32, i32)

declare void @__arunk_read16(i8*)

declare void @__arunk_write16(i8*)

declare i128 @__arunk_atomic128_load(i128*, i32)

declare void @__arunk_atomic128_store(i128*, i128, i32)

declare i128 @__arunk_atomic128_exchange(i128*, i128, i32)

declare i128 @__arunk_atomic128_fetch_add(i128*, i128, i32)

declare i128 @__arunk_atomic128_fetch_sub(i128*, i128, i32)

declare i128 @__arunk_atomic128_fetch_and(i128*, i128, i32)

declare i128 @__arunk_atomic128_fetch_nand(i128*, i128, i32)

declare i128 @__arunk_atomic128_fetch_or(i128*, i128, i32)

declare i128 @__arunk_atomic128_fetch_xor(i128*, i128, i32)

declare i128 @__arunk_atomic128_compare_exchange_val(i128*, i128, i128, i32, i32)

declare void @__arunk_vptr_update(i8*, i8*)

declare void @__arunk_vptr_read(i8*)

declare void @__arunk_atomic_thread_fence(i32)

declare void @__arunk_atomic_signal_fence(i32)

declare i8* @memmove(i8*, i8*, i64)

declare i8* @memcpy(i8*, i8*, i64)

declare i8* @memset(i8*, i32, i64)

declare void @__arunk_lock(i8*)

declare void @__arunk_unlock(i8*)

declare void @__arunk_create(i8*)

declare void @__arunk_join(i8*)

declare void @__arunk_init()

declare void @__arunk_set_line_num(i8*)

attributes #0 = { ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!51, !52}
!llvm.ident = !{!53}

!0 = metadata !{metadata !"0x11\004\00clang version 3.6.0 (221053)\000\00\000\00\001", metadata !1, metadata !2, metadata !3, metadata !32, metadata !45, metadata !2} ; [ DW_TAG_compile_unit ] [/Users/arunk/Code/LLVM/test_cases/Example_2/test.cpp] [DW_LANG_C_plus_plus]
!1 = metadata !{metadata !"test.cpp", metadata !"/Users/arunk/Code/LLVM/test_cases/Example_2"}
!2 = metadata !{}
!3 = metadata !{metadata !4, metadata !14, metadata !23}
!4 = metadata !{metadata !"0x13\00_opaque_pthread_mutex_t\0078\00512\0064\000\000\000", metadata !5, null, null, metadata !6, null, null, metadata !"_ZTS23_opaque_pthread_mutex_t"} ; [ DW_TAG_structure_type ] [_opaque_pthread_mutex_t] [line 78, size 512, align 64, offset 0] [def] [from ]
!5 = metadata !{metadata !"/usr/include/sys/_pthread/_pthread_types.h", metadata !"/Users/arunk/Code/LLVM/test_cases/Example_2"}
!6 = metadata !{metadata !7, metadata !9}
!7 = metadata !{metadata !"0xd\00__sig\0079\0064\0064\000\000", metadata !5, metadata !"_ZTS23_opaque_pthread_mutex_t", metadata !8} ; [ DW_TAG_member ] [__sig] [line 79, size 64, align 64, offset 0] [from long int]
!8 = metadata !{metadata !"0x24\00long int\000\0064\0064\000\000\005", null, null} ; [ DW_TAG_base_type ] [long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!9 = metadata !{metadata !"0xd\00__opaque\0080\00448\008\0064\000", metadata !5, metadata !"_ZTS23_opaque_pthread_mutex_t", metadata !10} ; [ DW_TAG_member ] [__opaque] [line 80, size 448, align 8, offset 64] [from ]
!10 = metadata !{metadata !"0x1\00\000\00448\008\000\000\000", null, null, metadata !11, metadata !12, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 448, align 8, offset 0] [from char]
!11 = metadata !{metadata !"0x24\00char\000\008\008\000\000\006", null, null} ; [ DW_TAG_base_type ] [char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!12 = metadata !{metadata !13}
!13 = metadata !{metadata !"0x21\000\0056"}       ; [ DW_TAG_subrange_type ] [0, 55]
!14 = metadata !{metadata !"0x13\00_opaque_pthread_t\00103\0065536\0064\000\000\000", metadata !5, null, null, metadata !15, null, null, metadata !"_ZTS17_opaque_pthread_t"} ; [ DW_TAG_structure_type ] [_opaque_pthread_t] [line 103, size 65536, align 64, offset 0] [def] [from ]
!15 = metadata !{metadata !16, metadata !17, metadata !19}
!16 = metadata !{metadata !"0xd\00__sig\00104\0064\0064\000\000", metadata !5, metadata !"_ZTS17_opaque_pthread_t", metadata !8} ; [ DW_TAG_member ] [__sig] [line 104, size 64, align 64, offset 0] [from long int]
!17 = metadata !{metadata !"0xd\00__cleanup_stack\00105\0064\0064\0064\000", metadata !5, metadata !"_ZTS17_opaque_pthread_t", metadata !18} ; [ DW_TAG_member ] [__cleanup_stack] [line 105, size 64, align 64, offset 64] [from ]
!18 = metadata !{metadata !"0xf\00\000\0064\0064\000\000", null, null, metadata !"_ZTS28__darwin_pthread_handler_rec"} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _ZTS28__darwin_pthread_handler_rec]
!19 = metadata !{metadata !"0xd\00__opaque\00106\0065408\008\00128\000", metadata !5, metadata !"_ZTS17_opaque_pthread_t", metadata !20} ; [ DW_TAG_member ] [__opaque] [line 106, size 65408, align 8, offset 128] [from ]
!20 = metadata !{metadata !"0x1\00\000\0065408\008\000\000\000", null, null, metadata !11, metadata !21, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 65408, align 8, offset 0] [from char]
!21 = metadata !{metadata !22}
!22 = metadata !{metadata !"0x21\000\008176"}     ; [ DW_TAG_subrange_type ] [0, 8175]
!23 = metadata !{metadata !"0x13\00__darwin_pthread_handler_rec\0057\00192\0064\000\000\000", metadata !5, null, null, metadata !24, null, null, metadata !"_ZTS28__darwin_pthread_handler_rec"} ; [ DW_TAG_structure_type ] [__darwin_pthread_handler_rec] [line 57, size 192, align 64, offset 0] [def] [from ]
!24 = metadata !{metadata !25, metadata !30, metadata !31}
!25 = metadata !{metadata !"0xd\00__routine\0058\0064\0064\000\000", metadata !5, metadata !"_ZTS28__darwin_pthread_handler_rec", metadata !26} ; [ DW_TAG_member ] [__routine] [line 58, size 64, align 64, offset 0] [from ]
!26 = metadata !{metadata !"0xf\00\000\0064\0064\000\000", null, null, metadata !27} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!27 = metadata !{metadata !"0x15\00\000\000\000\000\000\000", null, null, null, metadata !28, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!28 = metadata !{null, metadata !29}
!29 = metadata !{metadata !"0xf\00\000\0064\0064\000\000", null, null, null} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!30 = metadata !{metadata !"0xd\00__arg\0059\0064\0064\0064\000", metadata !5, metadata !"_ZTS28__darwin_pthread_handler_rec", metadata !29} ; [ DW_TAG_member ] [__arg] [line 59, size 64, align 64, offset 64] [from ]
!31 = metadata !{metadata !"0xd\00__next\0060\0064\0064\00128\000", metadata !5, metadata !"_ZTS28__darwin_pthread_handler_rec", metadata !18} ; [ DW_TAG_member ] [__next] [line 60, size 64, align 64, offset 128] [from ]
!32 = metadata !{metadata !33, metadata !37, metadata !38, metadata !41}
!33 = metadata !{metadata !"0x2e\00inc_counter\00inc_counter\00_Z11inc_counterv\0010\000\001\000\000\00256\000\0010", metadata !1, metadata !34, metadata !35, null, void ()* @_Z11inc_counterv, null, null, metadata !2} ; [ DW_TAG_subprogram ] [line 10] [def] [inc_counter]
!34 = metadata !{metadata !"0x29", metadata !1}   ; [ DW_TAG_file_type ] [/Users/arunk/Code/LLVM/test_cases/Example_2/test.cpp]
!35 = metadata !{metadata !"0x15\00\000\000\000\000\000\000", null, null, null, metadata !36, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!36 = metadata !{null}
!37 = metadata !{metadata !"0x2e\00inc_counter_without_lock\00inc_counter_without_lock\00_Z24inc_counter_without_lockv\0021\000\001\000\000\00256\000\0021", metadata !1, metadata !34, metadata !35, null, void ()* @_Z24inc_counter_without_lockv, null, null, metadata !2} ; [ DW_TAG_subprogram ] [line 21] [def] [inc_counter_without_lock]
!38 = metadata !{metadata !"0x2e\00Thread1\00Thread1\00_Z7Thread1Pv\0030\000\001\000\000\00256\000\0030", metadata !1, metadata !34, metadata !39, null, i8* (i8*)* @_Z7Thread1Pv, null, null, metadata !2} ; [ DW_TAG_subprogram ] [line 30] [def] [Thread1]
!39 = metadata !{metadata !"0x15\00\000\000\000\000\000\000", null, null, null, metadata !40, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!40 = metadata !{metadata !29, metadata !29}
!41 = metadata !{metadata !"0x2e\00main\00main\00\0036\000\001\000\000\00256\000\0036", metadata !1, metadata !34, metadata !42, null, i32 ()* @main, null, null, metadata !2} ; [ DW_TAG_subprogram ] [line 36] [def] [main]
!42 = metadata !{metadata !"0x15\00\000\000\000\000\000\000", null, null, null, metadata !43, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!43 = metadata !{metadata !44}
!44 = metadata !{metadata !"0x24\00int\000\0032\0032\000\000\005", null, null} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!45 = metadata !{metadata !46, metadata !47}
!46 = metadata !{metadata !"0x34\00Global\00Global\00\007\000\001", null, metadata !34, metadata !44, i32* @Global, null} ; [ DW_TAG_variable ] [Global] [line 7] [def]
!47 = metadata !{metadata !"0x34\00lock\00lock\00\008\000\001", null, metadata !34, metadata !48, %struct._opaque_pthread_mutex_t* @lock, null} ; [ DW_TAG_variable ] [lock] [line 8] [def]
!48 = metadata !{metadata !"0x16\00pthread_mutex_t\0030\000\000\000\000", metadata !49, null, metadata !50} ; [ DW_TAG_typedef ] [pthread_mutex_t] [line 30, size 0, align 0, offset 0] [from __darwin_pthread_mutex_t]
!49 = metadata !{metadata !"/usr/include/sys/_pthread/_pthread_mutex_t.h", metadata !"/Users/arunk/Code/LLVM/test_cases/Example_2"}
!50 = metadata !{metadata !"0x16\00__darwin_pthread_mutex_t\00113\000\000\000\000", metadata !5, null, metadata !"_ZTS23_opaque_pthread_mutex_t"} ; [ DW_TAG_typedef ] [__darwin_pthread_mutex_t] [line 113, size 0, align 0, offset 0] [from _ZTS23_opaque_pthread_mutex_t]
!51 = metadata !{i32 2, metadata !"Dwarf Version", i32 2}
!52 = metadata !{i32 2, metadata !"Debug Info Version", i32 2}
!53 = metadata !{metadata !"clang version 3.6.0 (221053)"}
!54 = metadata !{i32 11, i32 5, metadata !33, null}
!55 = metadata !{i32 12, i32 9, metadata !33, null}
!56 = metadata !{metadata !"0x100\00i\0012\000", metadata !33, metadata !34, metadata !44} ; [ DW_TAG_auto_variable ] [i] [line 12]
!57 = metadata !{metadata !"0x102"}               ; [ DW_TAG_expression ]
!58 = metadata !{i32 12, i32 5, metadata !33, null}
!59 = metadata !{i32 13, i32 5, metadata !33, null}
!60 = metadata !{metadata !"0x100\00temp\0014\000", metadata !61, metadata !34, metadata !44} ; [ DW_TAG_auto_variable ] [temp] [line 14]
!61 = metadata !{metadata !"0xb\0013\0018\000", metadata !1, metadata !33} ; [ DW_TAG_lexical_block ] [/Users/arunk/Code/LLVM/test_cases/Example_2/test.cpp]
!62 = metadata !{i32 14, i32 13, metadata !61, null}
!63 = metadata !{i32 14, i32 9, metadata !61, null}
!64 = metadata !{i32 15, i32 9, metadata !61, null}
!65 = metadata !{i32 16, i32 9, metadata !61, null}
!66 = metadata !{i32 18, i32 5, metadata !33, null}
!67 = metadata !{i32 19, i32 1, metadata !33, null}
!68 = metadata !{metadata !"0x100\00i\0022\000", metadata !37, metadata !34, metadata !44} ; [ DW_TAG_auto_variable ] [i] [line 22]
!69 = metadata !{i32 22, i32 9, metadata !37, null}
!70 = metadata !{i32 22, i32 5, metadata !37, null}
!71 = metadata !{i32 23, i32 5, metadata !37, null}
!72 = metadata !{metadata !"0x100\00temp\0024\000", metadata !73, metadata !34, metadata !44} ; [ DW_TAG_auto_variable ] [temp] [line 24]
!73 = metadata !{metadata !"0xb\0023\0018\001", metadata !1, metadata !37} ; [ DW_TAG_lexical_block ] [/Users/arunk/Code/LLVM/test_cases/Example_2/test.cpp]
!74 = metadata !{i32 24, i32 13, metadata !73, null}
!75 = metadata !{i32 24, i32 9, metadata !73, null}
!76 = metadata !{i32 25, i32 9, metadata !73, null}
!77 = metadata !{i32 26, i32 9, metadata !73, null}
!78 = metadata !{i32 28, i32 1, metadata !37, null}
!79 = metadata !{metadata !"0x101\00x\0016777246\000", metadata !38, metadata !34, metadata !29} ; [ DW_TAG_arg_variable ] [x] [line 30]
!80 = metadata !{i32 30, i32 21, metadata !38, null}
!81 = metadata !{i32 31, i32 5, metadata !38, null}
!82 = metadata !{i32 32, i32 5, metadata !38, null}
!83 = metadata !{metadata !"0x100\00t\0037\000", metadata !41, metadata !34, metadata !84} ; [ DW_TAG_auto_variable ] [t] [line 37]
!84 = metadata !{metadata !"0x1\00\000\0064\0064\000\000\000", null, null, metadata !85, metadata !89, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 64, align 64, offset 0] [from pthread_t]
!85 = metadata !{metadata !"0x16\00pthread_t\0030\000\000\000\000", metadata !86, null, metadata !87} ; [ DW_TAG_typedef ] [pthread_t] [line 30, size 0, align 0, offset 0] [from __darwin_pthread_t]
!86 = metadata !{metadata !"/usr/include/sys/_pthread/_pthread_t.h", metadata !"/Users/arunk/Code/LLVM/test_cases/Example_2"}
!87 = metadata !{metadata !"0x16\00__darwin_pthread_t\00118\000\000\000\000", metadata !5, null, metadata !88} ; [ DW_TAG_typedef ] [__darwin_pthread_t] [line 118, size 0, align 0, offset 0] [from ]
!88 = metadata !{metadata !"0xf\00\000\0064\0064\000\000", null, null, metadata !"_ZTS17_opaque_pthread_t"} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from _ZTS17_opaque_pthread_t]
!89 = metadata !{metadata !90}
!90 = metadata !{metadata !"0x21\000\001"}        ; [ DW_TAG_subrange_type ] [0, 0]
!91 = metadata !{i32 37, i32 15, metadata !41, null}
!92 = metadata !{i32 38, i32 5, metadata !41, null}
!93 = metadata !{i32 40, i32 5, metadata !41, null}
!94 = metadata !{i32 41, i32 5, metadata !41, null}
!95 = metadata !{i32 43, i32 5, metadata !41, null}
!96 = metadata !{i32 44, i32 5, metadata !41, null}
!97 = metadata !{i32 46, i32 1, metadata !41, null}
